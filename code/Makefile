CXX = g++
CFLAGS = -Wall -Iinclude -std=c++11
LFLAGS = -WALL


PSQL = $(shell pg_config --includedir)
LIB_PSQL = $(patsubst %/include,%/lib, $(PSQL)) -lpq

CFLAGS += -I$(PSQL)
LFLAGS += -L$(LIB_PSQL)

DEBUG = 0

SRC = $(wildcard src/*.cpp src/*/*.cpp)
OBJ = $(patsubst %.cpp, build/%.o, $(SRC))


ifeq ($(DEBUG), 1)
	CFLAGS += -g -O0
else
	CFLAGS += -O3
endif

.PHONY: all clean

# add learner later
all: dataloader.run

clean:
	@rm -rf build/*
	@rm -f *.run


dataloader.run: $(OBJ)
	$(CXX) $(LFLAGS) $(OBJ) -o $@

build/src/%.o: src/%.cpp
	@echo
	@echo $@
	@echo 
	mkdir -p $(@D)
	$(CXX) -c $(CFLAGS) $(patsubst build/%.o, %.cpp, $(@)) -o $(@)

# Generated by makedepend:
# makedepend src/*/* src/* -Iinclude -pbuild/

# DO NOT DELETE

build/src/features/client_manager.o: include/client_manager.h
build/src/features/domain_features_calculator.o: include/domain_features_calculator.h
build/src/log/dns_query.o: include/dns_query.h
build/src/log/query_executer.o: include/dns_query.h include/query_executer.h
build/src/log/query_executer.o: include/query_storage.h
build/src/log/query_filter.o: include/query_filter.h include/query_storage.h
build/src/log/query_filter.o: include/dns_query.h include/query_executer.h
build/src/log/query_filter_sql.o: include/query_filter.h
build/src/log/query_filter_sql.o: include/query_storage.h include/dns_query.h
build/src/log/query_storage_sql.o: include/query_storage.h
build/src/log/query_storage_sql.o: include/dns_query.h
build/src/log/query_storage_sql.o: include/domain_features_calculator.h
build/src/dataloader.o: include/query_filter.h include/query_storage.h
build/src/dataloader.o: include/dns_query.h